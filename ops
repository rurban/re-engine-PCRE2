{"version":1,"ops":[{"type":1,"author":{"id":"29d1b38bbba4e0e5dda6e2117fa06a73aa42106a"},"timestamp":1580422907,"metadata":{"github-id":"MDU6SXNzdWU1NTc3OTE5MTA=","github-url":"https://github.com/rurban/re-engine-PCRE2/issues/36","origin":"github"},"title":"UTF8 capture problem","message":"There is a common re::engine::* bug where RXf_MATCH_UTF8 flag is not being set on the perl regex object to ensure that all captures are correctly computed as UTF8 when the input is UTF8. There are 2 critical issues involved that are fixed by this\n                                                                                \n1)      All captures as well as ${^PREMATCH} and ${^POSTMATCH} will correctly have their utf8 bits set\n2)      $+[0] and $-[0] (offsets of captures) will be computed correctly for utf8 chars rather than byte offset. When these are wrong, it is impossible to compute a substring for match in the original text instead of using ${^POSTMATCH} which is required due to a horrific perf problem\n                                                                                \nXS code will need to do something like this                                     \n                                                                                \n#ifdef RXf_UTF8                                                                 \n     if (flags \u0026 RXf_UTF8)                                                      \n         extflags |= RXf_MATCH_UTF8;                                            \n  #else                                                                         \n     if (SvUTF8(pattern))                                                       \n         extflags |= RXf_MATCH_UTF8;                                            \n  #endif","files":null}]}