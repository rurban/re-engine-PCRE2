{"version":1,"ops":[{"type":1,"author":{"id":"5435141a73302fae7cf7a526794e1018ba2157ae"},"timestamp":1491987328,"metadata":{"github-id":"MDU6SXNzdWUyMjExOTQ1MzM=","github-url":"https://github.com/rurban/re-engine-PCRE2/issues/19","origin":"github"},"title":"global match data and context","message":"See PR #18 for the data part, #6  for the context parts.\nThere are two independent global contexts: compile and match.\n\n#18 regressed in one `t/perl/regexp.t` test. 1840 with an uninitialized stack element st.reg_sv.\n```\n# check we have the right utf8ness as we switch back and forth between\n# patterns\n^(\\x{100}|a)(??{ qr/.?\\xF7/d})\ta_\\xF7\ty\t-\t-\n```\n\nsometimes this even gives an `regexp memory corruption` error in the #18 branch match-data-comp-alloc, sometimes also `corrupted regexp pointers`. Wrong restauration of st.reg_sv after the nested codeblock fallback.\nasan reports a heap-buffer-overflow in S_regmatch.","files":null}]}